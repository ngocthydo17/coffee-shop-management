// <auto-generated />
using System;
using Manage_Coffee.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manage_Coffee.Migrations
{
    [DbContext(typeof(Cf2Context))]
    [Migration("20241021154424_AddTrongLuongToSize")]
    partial class AddTrongLuongToSize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Manage_Coffee.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Bom", b =>
                {
                    b.Property<string>("MaSp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaSP")
                        .IsFixedLength();

                    b.Property<string>("MaNvl")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNVL")
                        .IsFixedLength();

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("MaSp", "MaNvl")
                        .HasName("PK__BOM__74849F9A3EE903C7");

                    b.HasIndex("MaNvl");

                    b.ToTable("BOM", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.ChangePasswordModel", b =>
                {
                    b.Property<string>("CurrentPassword")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConfirmNewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrentPassword");

                    b.ToTable("ChangePasswordModel");
                });

            modelBuilder.Entity("Manage_Coffee.Models.ChiNhanh", b =>
                {
                    b.Property<string>("MaCn")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaCN")
                        .IsFixedLength();

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaCn")
                        .HasName("PK__ChiNhanh__27258E0E20D82064");

                    b.ToTable("ChiNhanh", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.ChitietDanhGium", b =>
                {
                    b.Property<string>("MaSp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaSP")
                        .IsFixedLength();

                    b.Property<string>("MaKh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MaKH")
                        .IsFixedLength();

                    b.Property<string>("NhanXet")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("MaSp", "MaKh")
                        .HasName("PK__ChitietD__D55754ED97C2B4EC");

                    b.HasIndex("MaKh");

                    b.ToTable("ChitietDanhGia");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Ctphieu", b =>
                {
                    b.Property<string>("MaNvl")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNVL")
                        .IsFixedLength();

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.HasKey("MaNvl", "MaPhieu")
                        .HasName("PK__CTPhieu__287F739A30E43D33");

                    b.HasIndex("MaPhieu");

                    b.ToTable("CTPhieu", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.CtsanPham", b =>
                {
                    b.Property<string>("MaOrder")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("MaSp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaSP")
                        .IsFixedLength();

                    b.Property<string>("MaKh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MaKH")
                        .IsFixedLength();

                    b.Property<string>("MaSize")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Ghichu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaOrder", "MaSp", "MaKh", "MaSize")
                        .HasName("PK__CTSanPha__E3CA93C7BB55FCEE");

                    b.HasIndex("MaSize");

                    b.HasIndex("MaSp");

                    b.ToTable("CTSanPham", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Ctsponl", b =>
                {
                    b.Property<string>("MaSp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaSP")
                        .IsFixedLength();

                    b.Property<string>("MaPhieuonl")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("MaSize")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("MaKh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MaKH")
                        .IsFixedLength();

                    b.Property<string>("Ghichu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<int>("Tongtien")
                        .HasColumnType("int");

                    b.HasKey("MaSp", "MaPhieuonl", "MaSize", "MaKh")
                        .HasName("PK__CTSPonl__6B340E67A2D88F1E");

                    b.HasIndex("MaPhieuonl");

                    b.HasIndex("MaSize");

                    b.ToTable("CTSPonl", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.DanhMucCa", b =>
                {
                    b.Property<DateTime>("Ngay")
                        .HasColumnType("date");

                    b.Property<string>("MaNv")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNV")
                        .IsFixedLength();

                    b.Property<string>("Calam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Ngay", "MaNv")
                        .HasName("PK__DanhMucC__D9BEBAC2B9F2395D");

                    b.HasIndex("MaNv");

                    b.ToTable("DanhMucCa", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.DanhMucKm", b =>
                {
                    b.Property<string>("MaKm")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaKM")
                        .IsFixedLength();

                    b.Property<int>("GiaTri")
                        .HasColumnType("int")
                        .HasColumnName("GiaTri");

                    b.Property<int>("Hanmuc")
                        .HasColumnType("int")
                        .HasColumnName("Hanmuc");

                    b.Property<DateTime>("Ngayapdung")
                        .HasColumnType("date");

                    b.Property<DateTime>("Ngayhethan")
                        .HasColumnType("date");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKm")
                        .HasName("PK__DanhMucK__2725CF155B7D31EE");

                    b.ToTable("DanhMucKM", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.ForgotPassword", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailSent")
                        .HasColumnType("bit");

                    b.HasKey("Email");

                    b.ToTable("ForgotPassword");
                });

            modelBuilder.Entity("Manage_Coffee.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MaKH")
                        .IsFixedLength();

                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<int?>("Sdt")
                        .HasColumnType("int")
                        .HasColumnName("SDT");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Xu")
                        .HasColumnType("int");

                    b.HasKey("MaKh")
                        .HasName("PK__KhachHan__2725CF1E3B146E27");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Kit", b =>
                {
                    b.Property<string>("MaSp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaSP")
                        .IsFixedLength();

                    b.Property<string>("MaKit")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaKIT")
                        .IsFixedLength();

                    b.Property<decimal>("GiaKit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int")
                        .HasColumnName("SoLuong");

                    b.HasKey("MaSp", "MaKit")
                        .HasName("PK__KIT__MaSp_MaKit");

                    b.HasIndex("MaKit");

                    b.ToTable("KIT", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Loai", b =>
                {
                    b.Property<string>("Maloai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Maloai")
                        .HasName("PK__Loai__3E1DB46D4D7258A9");

                    b.ToTable("Loai", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.NguyenVatLieu", b =>
                {
                    b.Property<string>("MaNvl")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNVL")
                        .IsFixedLength();

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Dongia")
                        .HasColumnType("int");

                    b.Property<string>("Dvt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DVT");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNvl")
                        .HasName("PK__NguyenVa__3A197864454B6A99");

                    b.ToTable("NguyenVatLieu", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Nhacungcap", b =>
                {
                    b.Property<string>("MaCcap")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sdt")
                        .HasColumnType("int")
                        .HasColumnName("SDT");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaCcap")
                        .HasName("PK__Nhacungc__1A1475A84B56D97C");

                    b.ToTable("Nhacungcap", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNv")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNV")
                        .IsFixedLength();

                    b.Property<string>("Chucvu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("GioiTinh")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("MaCn")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaCN")
                        .IsFixedLength();

                    b.Property<string>("Mkhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Ngaysinh")
                        .HasColumnType("date");

                    b.Property<int>("Sdt")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNv")
                        .HasName("PK__NhanVien__2725D70A2E229495");

                    b.HasIndex("MaCn");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.PhieuNhapXuat", b =>
                {
                    b.Property<string>("MaPhieu")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Loai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaCcap")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("MaNv")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNV")
                        .IsFixedLength();

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("date");

                    b.HasKey("MaPhieu")
                        .HasName("PK__PhieuNha__2660BFE0404E71E8");

                    b.HasIndex("MaCcap");

                    b.HasIndex("MaNv");

                    b.ToTable("PhieuNhapXuat", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.PhieuOrder", b =>
                {
                    b.Property<string>("MaOrder")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("MaCn")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaCN")
                        .IsFixedLength();

                    b.Property<string>("MaKm")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaKM")
                        .IsFixedLength();

                    b.Property<string>("MaNv")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaNV")
                        .IsFixedLength();

                    b.Property<DateTime>("Ngaygiodat")
                        .HasColumnType("datetime");

                    b.Property<string>("Pttt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PTTT");

                    b.Property<int?>("Sdt")
                        .HasColumnType("int")
                        .HasColumnName("Sdt");

                    b.Property<int>("Soban")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ten");

                    b.Property<int>("Tongtien")
                        .HasColumnType("int");

                    b.Property<bool?>("Trangthai")
                        .HasColumnType("bit");

                    b.HasKey("MaOrder")
                        .HasName("PK__PhieuOrd__50559EF73AF128AD");

                    b.HasIndex("MaCn");

                    b.HasIndex("MaKm");

                    b.HasIndex("MaNv");

                    b.ToTable("PhieuOrder", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Phieudhonl", b =>
                {
                    b.Property<string>("MaPhieuonl")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength();

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaCn")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaCN")
                        .IsFixedLength();

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("MaKH")
                        .IsFixedLength();

                    b.Property<string>("MaKm")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaKM")
                        .IsFixedLength();

                    b.Property<DateTime>("Ngaygiodat")
                        .HasColumnType("datetime");

                    b.Property<string>("Ptnh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PTNH");

                    b.Property<string>("Pttt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PTTT");

                    b.Property<int?>("TienShip")
                        .HasColumnType("int");

                    b.Property<int?>("TongTien")
                        .HasColumnType("int");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaPhieuonl")
                        .HasName("PK__Phieudho__144F3C04508AE3D5");

                    b.HasIndex("MaCn");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaKm");

                    b.ToTable("Phieudhonl", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.ResetPasswordModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConfirmNewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("NewPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("ResetPasswordModel");
                });

            modelBuilder.Entity("Manage_Coffee.Models.SanPham", b =>
                {
                    b.Property<string>("MaSp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("MaSP")
                        .IsFixedLength();

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Dongia")
                        .HasColumnType("int");

                    b.Property<string>("Dvt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DVT");

                    b.Property<string>("MaTopping")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Maloai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("MOTA");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.HasKey("MaSp")
                        .HasName("PK__SanPham__2725081CCC8EB8FA");

                    b.HasIndex("MaTopping");

                    b.HasIndex("Maloai");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.SearchHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SearchCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SearchHistories");
                });

            modelBuilder.Entity("Manage_Coffee.Models.SignInModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RememberMe")
                        .HasColumnType("bit");

                    b.HasKey("Email");

                    b.ToTable("SignInModel");
                });

            modelBuilder.Entity("Manage_Coffee.Models.SignUpUserModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("SignUpUserModel", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Size", b =>
                {
                    b.Property<string>("MaSize")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TriGia")
                        .HasColumnType("int");

                    b.Property<string>("Trongluong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSize")
                        .HasName("PK__Size__A787E7ED45B00A2A");

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Slider", b =>
                {
                    b.Property<string>("MaSL")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Anh")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Mota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Trangthai")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.HasKey("MaSL")
                        .HasName("PK__Slider__2725CF1E3B146E27");

                    b.ToTable("Slider", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Manage_Coffee.Models.Bom", b =>
                {
                    b.HasOne("Manage_Coffee.Models.NguyenVatLieu", "MaNvlNavigation")
                        .WithMany("Boms")
                        .HasForeignKey("MaNvl")
                        .IsRequired()
                        .HasConstraintName("FK__BOM__MaNVL__628FA481");

                    b.HasOne("Manage_Coffee.Models.SanPham", "MaSpNavigation")
                        .WithMany("Boms")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK__BOM__MaSP__619B8048");

                    b.Navigation("MaNvlNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.ChitietDanhGium", b =>
                {
                    b.HasOne("Manage_Coffee.Models.KhachHang", "MaKhNavigation")
                        .WithMany("ChitietDanhGia")
                        .HasForeignKey("MaKh")
                        .IsRequired()
                        .HasConstraintName("FK__ChitietDan__MaKH__66603565");

                    b.HasOne("Manage_Coffee.Models.SanPham", "MaSpNavigation")
                        .WithMany("ChitietDanhGia")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK__ChitietDan__MaSP__656C112C");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Ctphieu", b =>
                {
                    b.HasOne("Manage_Coffee.Models.NguyenVatLieu", "MaNvlNavigation")
                        .WithMany("Ctphieus")
                        .HasForeignKey("MaNvl")
                        .IsRequired()
                        .HasConstraintName("FK__CTPhieu__MaNVL__693CA210");

                    b.HasOne("Manage_Coffee.Models.PhieuNhapXuat", "MaPhieuNavigation")
                        .WithMany("Ctphieus")
                        .HasForeignKey("MaPhieu")
                        .IsRequired()
                        .HasConstraintName("FK__CTPhieu__MaPhieu__6A30C649");

                    b.Navigation("MaNvlNavigation");

                    b.Navigation("MaPhieuNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.CtsanPham", b =>
                {
                    b.HasOne("Manage_Coffee.Models.PhieuOrder", "MaOrderNavigation")
                        .WithMany("CtsanPhams")
                        .HasForeignKey("MaOrder")
                        .IsRequired()
                        .HasConstraintName("FK__CTSanPham__MaOrd__5CD6CB2B");

                    b.HasOne("Manage_Coffee.Models.Size", "MaSizeNavigation")
                        .WithMany("CtsanPhams")
                        .HasForeignKey("MaSize")
                        .IsRequired()
                        .HasConstraintName("FK__CTSanPham__MaSiz__5EBF139D");

                    b.HasOne("Manage_Coffee.Models.SanPham", "MaSpNavigation")
                        .WithMany("CtsanPhams")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK__CTSanPham__MaSP__5DCAEF64");

                    b.Navigation("MaOrderNavigation");

                    b.Navigation("MaSizeNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Ctsponl", b =>
                {
                    b.HasOne("Manage_Coffee.Models.Phieudhonl", "MaPhieuonlNavigation")
                        .WithMany("Ctsponls")
                        .HasForeignKey("MaPhieuonl")
                        .IsRequired()
                        .HasConstraintName("FK__CTSPonl__MaPhieu__6E01572D");

                    b.HasOne("Manage_Coffee.Models.Size", "MaSizeNavigation")
                        .WithMany("Ctsponls")
                        .HasForeignKey("MaSize")
                        .IsRequired()
                        .HasConstraintName("FK__CTSPonl__MaSize__6EF57B66");

                    b.HasOne("Manage_Coffee.Models.SanPham", "MaSpNavigation")
                        .WithMany("Ctsponls")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK__CTSPonl__MaSP__6D0D32F4");

                    b.Navigation("MaPhieuonlNavigation");

                    b.Navigation("MaSizeNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.DanhMucCa", b =>
                {
                    b.HasOne("Manage_Coffee.Models.NhanVien", "MaNvNavigation")
                        .WithMany("DanhMucCas")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("FK__DanhMucCa__MaNV__4222D4EF");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Kit", b =>
                {
                    b.HasOne("Manage_Coffee.Models.SanPham", "MaKitNavigation")
                        .WithMany("KitsAsKit")
                        .HasForeignKey("MaKit")
                        .IsRequired()
                        .HasConstraintName("FK__KIT__MaKIT__628FA481");

                    b.HasOne("Manage_Coffee.Models.SanPham", "MaSpNavigation")
                        .WithMany("KitsAsSp")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK__KIT__MaSP__619B8048");

                    b.Navigation("MaKitNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.NhanVien", b =>
                {
                    b.HasOne("Manage_Coffee.Models.ChiNhanh", "MaCnNavigation")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaCn")
                        .HasConstraintName("FK__NhanVien__MaCN__3D5E1FD2");

                    b.Navigation("MaCnNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.PhieuNhapXuat", b =>
                {
                    b.HasOne("Manage_Coffee.Models.Nhacungcap", "MaCcapNavigation")
                        .WithMany("PhieuNhapXuats")
                        .HasForeignKey("MaCcap")
                        .HasConstraintName("FK__PhieuNhap__MaCca__59FA5E80");

                    b.HasOne("Manage_Coffee.Models.NhanVien", "MaNvNavigation")
                        .WithMany("PhieuNhapXuats")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuNhapX__MaNV__59063A47");

                    b.Navigation("MaCcapNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.PhieuOrder", b =>
                {
                    b.HasOne("Manage_Coffee.Models.ChiNhanh", "MaCnNavigation")
                        .WithMany("PhieuOrders")
                        .HasForeignKey("MaCn")
                        .IsRequired()
                        .HasConstraintName("FK__PhieuOrder__MaCN__5070F446");

                    b.HasOne("Manage_Coffee.Models.DanhMucKm", "MaKmNavigation")
                        .WithMany("PhieuOrders")
                        .HasForeignKey("MaKm")
                        .HasConstraintName("FK__PhieuOrder__MaKM__52593CB8");

                    b.HasOne("Manage_Coffee.Models.NhanVien", "MaNvNavigation")
                        .WithMany("PhieuOrders")
                        .HasForeignKey("MaNv")
                        .HasConstraintName("FK__PhieuOrder__MaNV__5165187F");

                    b.Navigation("MaCnNavigation");

                    b.Navigation("MaKmNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Phieudhonl", b =>
                {
                    b.HasOne("Manage_Coffee.Models.ChiNhanh", "MaCnNavigation")
                        .WithMany("Phieudhonls")
                        .HasForeignKey("MaCn")
                        .IsRequired()
                        .HasConstraintName("FK__Phieudhonl__MaCN__49C3F6B7");

                    b.HasOne("Manage_Coffee.Models.KhachHang", "MaKhNavigation")
                        .WithMany("Phieudhonls")
                        .HasForeignKey("MaKh")
                        .IsRequired()
                        .HasConstraintName("FK__Phieudhonl__MaKH__48CFD27E");

                    b.HasOne("Manage_Coffee.Models.DanhMucKm", "MaKmNavigation")
                        .WithMany("Phieudhonls")
                        .HasForeignKey("MaKm")
                        .HasConstraintName("FK__Phieudhonl__MaKM__4AB81AF0");

                    b.Navigation("MaCnNavigation");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaKmNavigation");
                });

            modelBuilder.Entity("Manage_Coffee.Models.SanPham", b =>
                {
                    b.HasOne("Manage_Coffee.Models.SanPham", "MaToppingNavigation")
                        .WithMany("InverseMaToppingNavigation")
                        .HasForeignKey("MaTopping")
                        .HasConstraintName("FK__SanPham__MaToppi__5629CD9C");

                    b.HasOne("Manage_Coffee.Models.Loai", "MaloaiNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("Maloai")
                        .HasConstraintName("FK__SanPham__Maloai__5535A963");

                    b.Navigation("MaToppingNavigation");

                    b.Navigation("MaloaiNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Manage_Coffee.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Manage_Coffee.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manage_Coffee.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Manage_Coffee.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Manage_Coffee.Models.ChiNhanh", b =>
                {
                    b.Navigation("NhanViens");

                    b.Navigation("PhieuOrders");

                    b.Navigation("Phieudhonls");
                });

            modelBuilder.Entity("Manage_Coffee.Models.DanhMucKm", b =>
                {
                    b.Navigation("PhieuOrders");

                    b.Navigation("Phieudhonls");
                });

            modelBuilder.Entity("Manage_Coffee.Models.KhachHang", b =>
                {
                    b.Navigation("ChitietDanhGia");

                    b.Navigation("Phieudhonls");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Loai", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("Manage_Coffee.Models.NguyenVatLieu", b =>
                {
                    b.Navigation("Boms");

                    b.Navigation("Ctphieus");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Nhacungcap", b =>
                {
                    b.Navigation("PhieuNhapXuats");
                });

            modelBuilder.Entity("Manage_Coffee.Models.NhanVien", b =>
                {
                    b.Navigation("DanhMucCas");

                    b.Navigation("PhieuNhapXuats");

                    b.Navigation("PhieuOrders");
                });

            modelBuilder.Entity("Manage_Coffee.Models.PhieuNhapXuat", b =>
                {
                    b.Navigation("Ctphieus");
                });

            modelBuilder.Entity("Manage_Coffee.Models.PhieuOrder", b =>
                {
                    b.Navigation("CtsanPhams");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Phieudhonl", b =>
                {
                    b.Navigation("Ctsponls");
                });

            modelBuilder.Entity("Manage_Coffee.Models.SanPham", b =>
                {
                    b.Navigation("Boms");

                    b.Navigation("ChitietDanhGia");

                    b.Navigation("CtsanPhams");

                    b.Navigation("Ctsponls");

                    b.Navigation("InverseMaToppingNavigation");

                    b.Navigation("KitsAsKit");

                    b.Navigation("KitsAsSp");
                });

            modelBuilder.Entity("Manage_Coffee.Models.Size", b =>
                {
                    b.Navigation("CtsanPhams");

                    b.Navigation("Ctsponls");
                });
#pragma warning restore 612, 618
        }
    }
}
